@model IEnumerable<Sports_Video_Logbook.Models.SubmissaoTarefa>
@{
    ViewData["Title"] = "Submissões dos Alunos";
    var tarefa = ViewBag.Tarefa as Sports_Video_Logbook.Models.Tarefa;
}

<div class="skills-card">
    <div class="skills-header">
        <h2 style="color: #67432F; font-family: Georgia, serif; margin: 0; display: flex; align-items: center;">
            <i class="bi bi-file-earmark-check" style="margin-right: 12px; font-size: 1.5rem;"></i>
            Submissões dos Alunos
        </h2>
    </div>
    
    <div style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 20px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #67432F;">
        <div style="display: flex; gap: 30px; flex-wrap: wrap;">
            <div>
                <strong style="color: #67432F; font-family: Georgia, serif;">Tarefa:</strong> 
                <span style="color: #495057;">@tarefa?.Titulo</span>
            </div>
            <div>
                <strong style="color: #67432F; font-family: Georgia, serif;">UC:</strong> 
                <span style="color: #495057;">@tarefa?.UC?.Nome</span>
            </div>
        </div>
    </div>
    
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" style="margin: 15px 0;">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert" style="margin: 15px 0;">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (!Model.Any()) {
        <div class="alert alert-info text-center" style="margin: 20px 0;">
            <i class="bi bi-info-circle"></i> Nenhuma submissão encontrada para esta tarefa.
        </div>
    } else {
        <table class="skills-table" style="width: 100%; table-layout: fixed;">
            <thead>
                <tr>
                    <th class="skills-th" style="width: 25%;">Aluno</th>
                    <th class="skills-th" style="width: 20%;">Data Submissão</th>
                    <th class="skills-th" style="width: 35%;">Conteúdo</th>
                    <th class="skills-th" style="width: 20%;">Ficheiros</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var sub in Model) {
                <!-- Primeira linha: Informações básicas -->
                <tr class="skill-row">
                    <td class="skills-td" style="width: 25%; vertical-align: top; padding-top: 8px;">
                        <strong style="color: #67432F;">@sub.Aluno?.UserName</strong>
                        @if (!string.IsNullOrEmpty(sub.Aluno?.Numero_Mecanografico))
                        {
                            <br><small class="text-muted">@sub.Aluno.Numero_Mecanografico</small>
                        }
                    </td>
                    <td class="skills-td" style="width: 20%; vertical-align: top; padding-top: 8px;">
                        <div style="white-space: nowrap;">
                            @sub.DataSubmissao.ToString("dd/MM/yyyy")
                            <br><small class="text-muted">@sub.DataSubmissao.ToString("HH:mm")</small>
                        </div>
                        @{
                            bool foiComAtraso = sub.DataSubmissao > tarefa.DataFim;
                        }
                        @if (foiComAtraso)
                        {
                            <br><small class="text-warning">
                                <i class="bi bi-exclamation-triangle"></i> Com atraso
                            </small>
                        }
                        else
                        {
                            <br><small class="text-success">
                                <i class="bi bi-check-circle"></i> No prazo
                            </small>
                        }
                    </td>
                    <td class="skills-td" style="width: 35%; vertical-align: top; padding-top: 8px;">
                            @if (!string.IsNullOrEmpty(sub.Texto))
                            {
                                string textoLimpo = sub.Texto.Trim();
                                string textoPreview = textoLimpo.Length > 150 ? textoLimpo.Substring(0, 150) + "..." : textoLimpo;
                                bool temTextoLongo = textoLimpo.Length > 150;

                                <div style="position: relative;">
                                    <div id="preview_@sub.Id" style="padding: 12px; background: #f8f9fa; border-radius: 6px; border-left: 3px solid #67432F; font-size: 0.9rem; line-height: 1.4; color: #495057;">
                                        @textoPreview
                                    </div>
                                    @if (temTextoLongo)
                                    {
                                        <div id="full_@sub.Id" style="display: none; max-height: 200px; overflow-y: auto; padding: 12px; background: #f8f9fa; border-radius: 6px; border-left: 3px solid #67432F; white-space: pre-wrap; word-break: break-word; font-size: 0.9rem; line-height: 1.4; color: #495057;">
                                            @textoLimpo
                                        </div>
                                        <button type="button" onclick="toggleTexto(@sub.Id)" id="btn_@sub.Id" style="background: none; border: none; color: #67432F; font-size: 0.8rem; padding: 4px 0; cursor: pointer; text-decoration: underline; margin-top: 5px;">
                                            Ver mais
                                        </button>
                                    }
                                </div>
                            }
                            else
                            {
                                <div style="padding: 12px; background: #f8f9fa; border-radius: 6px; border-left: 3px solid #dee2e6; color: #6c757d; font-style: italic; text-align: center; font-size: 0.9rem;">
                                    <i class="bi bi-file-text"></i> Sem conteúdo de texto
                                </div>
                            }
                    </td>
                    <td class="skills-td" style="width: 20%; vertical-align: top;">
                        @if (sub.Ficheiros != null && sub.Ficheiros.Any()) {
                            <div style="display: flex; flex-direction: column; gap: 8px; padding-top: 8px;">
                            @foreach (var f in sub.Ficheiros) {
                                <a href="@f.Caminho" target="_blank" class="btn btn-outline-primary btn-sm" style="font-size: 12px; padding: 8px 12px; text-decoration: none; min-height: 36px; display: flex; align-items: center; justify-content: center; border-radius: 6px;">
                                    <i class="bi bi-download" style="margin-right: 6px;"></i> @f.Tipo
                                </a>
                            }
                            </div>
                        } else {
                            <span style="color: #6c757d; font-style: italic; padding: 12px 8px; display: block;">Sem ficheiros</span>
                        }
                    </td>
                </tr>
                
                <!-- Segunda linha: Avaliação por Skills -->
                <tr class="skill-row">
                    <td colspan="4" class="skills-td" style="vertical-align: top; border-top: 1px solid #dee2e6; background-color: #fafafa;">
                        <form asp-action="AvaliarSubmissao" method="post" style="background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6; margin: 10px 0;">
                            <input type="hidden" name="submissaoId" value="@sub.Id" />
                            
                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 30px;">
                                <!-- Coluna esquerda: Skills e Nota Final -->
                                <div>
                                    @if (tarefa?.TarefaSkills != null && tarefa.TarefaSkills.Any())
                                    {
                                        <div style="margin-bottom: 20px;">
                                            <h6 style="color: #67432F; margin-bottom: 15px; font-weight: 600; font-size: 1.1rem;">
                                                <i class="bi bi-star"></i> Avaliação por Skills:
                                            </h6>
                                            @foreach (var tarefaSkill in tarefa.TarefaSkills.OrderBy(ts => ts.Skill?.Nome))
                                            {
                                                <div style="display: flex; align-items: center; margin-bottom: 12px; gap: 15px;">
                                                    <label style="flex: 1; font-size: 0.95rem; color: #495057; margin: 0; font-weight: 500;">
                                                        @tarefaSkill.Skill?.Nome (@tarefaSkill.Peso%):
                                                    </label>
                                                    <input type="number" name="skill_@tarefaSkill.SkillId" min="0" max="20" step="0.1" 
                                                           class="form-control skill-input" data-peso="@tarefaSkill.Peso" data-submissao="@sub.Id"
                                                           style="max-width: 80px; font-size: 0.95rem;" 
                                                           value="@(sub.AvaliacoesSkills?.FirstOrDefault(a => a.SkillId == tarefaSkill.SkillId)?.Nota ?? 0.0)" 
                                                           oninput="validarECalcularNota(this, @sub.Id)" 
                                                           placeholder="0-20" title="Nota deve estar entre 0 e 20" />
                                                </div>
                                            }
                                        </div>
                                        
                                        <div style="background: white; padding: 15px; border-radius: 8px; margin-bottom: 20px; border: 2px solid #67432F; text-align: center;">
                                            <strong style="color: #67432F; font-size: 1.1rem;">Nota Final Calculada: </strong>
                                            <span id="notaFinal_@sub.Id" style="font-weight: bold; font-size: 1.3rem; color: #67432F;">0.0</span>
                                            <span style="color: #6c757d; font-size: 1.1rem;">/20</span>
                                        </div>
                                    }
                                </div>
                                
                                <!-- Coluna direita: Comentário e Botão -->
                                <div>
                                    <div style="margin-bottom: 20px;">
                                        <label style="font-weight: 600; color: #67432F; margin-bottom: 8px; display: block; font-size: 1.1rem;">
                                            <i class="bi bi-chat-text"></i> Comentário:
                                        </label>
                                        <textarea name="comentario" class="form-control" rows="6" style="resize: vertical; font-size: 0.95rem;" placeholder="Comentário sobre a submissão...">@sub.ComentarioProfessor</textarea>
                                    </div>
                                    
                                    <button type="submit" class="btn" style="background-color: #67432F; color: white; border: none; padding: 12px 24px; border-radius: 8px; font-weight: 600; font-size: 1rem; width: 100%; transition: background 0.2s;" onmouseover="this.style.backgroundColor='#4a2f21'" onmouseout="this.style.backgroundColor='#67432F'">
                                        <i class="bi bi-check-circle"></i> GUARDAR AVALIAÇÃO
                                    </button>
                                </div>
                            </div>
                        </form>
                        
                        @if (sub.NotaFinal != null)
                        {
                            <div style="margin: 10px 0; padding: 15px; background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%); border-radius: 8px; border-left: 5px solid #28a745;">
                                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
                                    <strong style="color: #155724; font-size: 1.1rem;">
                                        <i class="bi bi-check-circle-fill"></i> Avaliação Atual:
                                    </strong>
                                    <span style="background: #28a745; color: white; padding: 6px 15px; border-radius: 15px; font-weight: bold; font-size: 1.1rem;">@sub.NotaFinal.Value.ToString("0.0")/20</span>
                                </div>
                                @if (!string.IsNullOrEmpty(sub.ComentarioProfessor))
                                {
                                    <div style="font-size: 0.95rem; color: #155724; font-style: italic; padding: 8px; background: rgba(255,255,255,0.5); border-radius: 4px;">
                                        "@sub.ComentarioProfessor"
                                    </div>
                                }
                            </div>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
    
    <div class="mt-3" style="padding: 15px 0; border-top: 1px solid #ddd; text-align: center;">
        <a asp-action="Index" style="background-color: #6c757d; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; transition: background 0.2s;" onmouseover="this.style.backgroundColor='#545b62'" onmouseout="this.style.backgroundColor='#6c757d'">
            <i class="bi bi-arrow-left"></i> VOLTAR À LISTA
        </a>
    </div>
</div>

@section Scripts {
<script>
    function validarECalcularNota(input, submissaoId) {
        let valor = parseFloat(input.value);
        
        // Validar se o valor está dentro do range 0-20
        if (isNaN(valor)) {
            valor = 0;
        } else if (valor < 0) {
            valor = 0;
            input.value = valor;
        } else if (valor > 20) {
            valor = 20;
            input.value = valor;
        }
        
        // Feedback visual para valores válidos/inválidos
        if (valor >= 0 && valor <= 20) {
            input.style.borderColor = '#28a745'; // Verde para válido
            input.style.backgroundColor = '#f8fff9';
        } else {
            input.style.borderColor = '#dc3545'; // Vermelho para inválido
            input.style.backgroundColor = '#fff8f8';
        }
        
        // Calcular nota final
        calcularNotaFinalIndividual(submissaoId);
    }
    
    function calcularNotaFinalIndividual(submissaoId) {
        // Encontrar todos os inputs de skill para esta submissão específica
        const inputs = document.querySelectorAll('.skill-input[data-submissao="' + submissaoId + '"]');
        
        let totalPeso = 0;
        let totalNota = 0;
        let todosValidos = true;
        
        inputs.forEach(function(input) {
            let nota = parseFloat(input.value) || 0;
            const peso = parseFloat(input.getAttribute('data-peso')) || 0;
            
            // Garantir que a nota está no range válido
            if (nota < 0 || nota > 20) {
                todosValidos = false;
                return;
            }
            
            totalNota += nota * (peso / 100.0);
            totalPeso += peso;
        });
        
        // Calcular nota final
        const notaFinal = (totalPeso > 0 && todosValidos) ? totalNota : 0;
        
        // Atualizar o elemento da nota final
        const notaFinalElement = document.getElementById('notaFinal_' + submissaoId);
        if (notaFinalElement) {
            notaFinalElement.textContent = notaFinal.toFixed(1);
            
            // Colorir a nota final baseada no valor
            if (notaFinal >= 14) {
                notaFinalElement.style.color = '#28a745'; // Verde para notas boas
            } else if (notaFinal >= 9.5) {
                notaFinalElement.style.color = '#ffc107'; // Amarelo para notas médias
            } else {
                notaFinalElement.style.color = '#dc3545'; // Vermelho para notas baixas
            }
        }
    }
    
    function calcularNotaFinal() {
        // Para cada submissão, calcular a nota final
        document.querySelectorAll('form[asp-action="AvaliarSubmissao"]').forEach(function(form) {
            const submissaoId = form.querySelector('input[name="submissaoId"]').value;
            calcularNotaFinalIndividual(submissaoId);
        });
    }
    
    function toggleTexto(submissaoId) {
        const preview = document.getElementById('preview_' + submissaoId);
        const full = document.getElementById('full_' + submissaoId);
        const btn = document.getElementById('btn_' + submissaoId);
        
        if (full.style.display === 'none' || full.style.display === '') {
            preview.style.display = 'none';
            full.style.display = 'block';
            btn.textContent = 'Ver menos';
        } else {
            preview.style.display = 'block';
            full.style.display = 'none';
            btn.textContent = 'Ver mais';
        }
    }
    
    // Adicionar validação nos campos quando perdem o foco
    document.addEventListener('DOMContentLoaded', function() {
        calcularNotaFinal();
        
        // Adicionar event listeners para validação
        document.querySelectorAll('.skill-input').forEach(function(input) {
            input.addEventListener('blur', function() {
                const submissaoId = this.getAttribute('data-submissao');
                validarECalcularNota(this, submissaoId);
            });
        });
    });
    
    // Auto-dismiss success alerts after 5 seconds
    setTimeout(function() {
        var alerts = document.querySelectorAll('.alert-success');
        alerts.forEach(function(alert) {
            var bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);
</script>
} 