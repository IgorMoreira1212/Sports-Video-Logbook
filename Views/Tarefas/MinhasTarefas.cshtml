@model IEnumerable<Sports_Video_Logbook.Models.Tarefa>

@{
    ViewData["Title"] = "Minhas Tarefas";
}

<div class="skills-card">
    <div class="skills-header">
        <form id="tarefaSearchForm" method="get" style="display: flex; width: 100%; gap: 15px;">
            <input id="searchTarefa" name="search" type="text" class="skills-search" placeholder="Pesquisar tarefas..." value="@ViewBag.SearchValue" autocomplete="off" style="flex: 1;" />
            
            <select id="ucFilter" name="uc" class="skills-search" style="flex: 1;">
                <option value="">Todas as UCs</option>
                @foreach (var uc in ViewBag.UCsDisponiveis ?? new List<dynamic>())
                {
                    @if (ViewBag.UCValue == uc.Id.ToString())
                    {
                        <option value="@uc.Id" selected>@uc.Nome</option>
                    }
                    else
                    {
                        <option value="@uc.Id">@uc.Nome</option>
                    }
                }
            </select>
        </form>
    </div>
    
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" style="margin: 15px 0;">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (!Model.Any())
    {
        <div class="alert alert-info text-center" style="margin: 20px 0;">
            <i class="bi bi-info-circle"></i> Nenhuma tarefa encontrada.
        </div>
    }
    else
    {
        <table class="skills-table" style="width: 100%; table-layout: fixed;">
            <thead>
                <tr>
                    <th class="skills-th" style="width: 40%;">Tarefa</th>
                    <th class="skills-th" style="width: 25%;">Unidade Curricular</th>
                    <th class="skills-th" style="width: 20%;">Data Limite</th>
                    <th class="skills-th skills-th-action" style="width: 15%;">Ação</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model) 
            {
                <tr class="skill-row">
                    <td class="skills-td" style="width: 40%; padding-right: 10px;">
                        <strong>@item.Titulo</strong>
                        @if (!string.IsNullOrEmpty(item.Descricao))
                        {
                            <br><small class="text-muted">@item.Descricao</small>
                        }
                        <br>
                        @if (item.Concluida)
                        {
                            <span class="badge bg-success">
                                <i class="bi bi-check-circle"></i> Concluída
                            </span>
                        }
                        else if (item.DataFim < DateTime.Now)
                        {
                            <span class="badge" style="background-color: #b30000; color: white;">
                                <i class="bi bi-exclamation-triangle"></i> Expirada
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-warning text-dark">
                                <i class="bi bi-clock"></i> Pendente
                            </span>
                        }
                    </td>
                    <td class="skills-td" style="width: 25%;">@(item.UC?.Nome ?? "N/A")</td>
                    <td class="skills-td" style="width: 20%;">
                        @item.DataFim.ToString("dd/MM/yyyy")
                        <br><small class="text-muted">@item.DataFim.ToString("HH:mm")</small>
                            @if (item.Concluida)
                            {
                                var submissao = item.Submissoes?.FirstOrDefault();
                                bool foiComAtraso = submissao != null && submissao.DataSubmissao > item.DataFim;

                                if (foiComAtraso)
                                {
                                    <br>

                                    <small class="text-warning">
                                        <i class="bi bi-exclamation-circle"></i> Concluída com atraso
                                    </small>
                                }
                                else
                                {
                                    <br>

                                    <small class="text-success">
                                        <i class="bi bi-check-circle"></i> Concluída no prazo
                                    </small>
                                }
                            }
                            else
                            {
                                <br>

                                <small class="text-danger">
                                    <i class="bi bi-exclamation-triangle"></i> Não concluída
                                </small>
                            }

                    </td>
                    <td class="skills-td skills-td-action" style="width: 15%;">
                        <div style="display: flex; flex-direction: row; gap: 8px; justify-content: center; flex-wrap: wrap;">
                            <a asp-action="Details" asp-route-id="@item.Id" style="background-color: #67432F; color: white; padding: 10px 16px; text-decoration: none; border-radius: 6px; text-align: center; font-size: 12px; font-weight: bold; width: 140px; transition: background 0.2s;" onmouseover="this.style.backgroundColor='#4a2f21'" onmouseout="this.style.backgroundColor='#67432F'">DETALHES</a>
                            @if (!item.Concluida)
                            {
                                <a asp-action="Submeter" asp-route-id="@item.Id" style="background-color: #1e7e34; color: white; padding: 10px 16px; text-decoration: none; border-radius: 6px; text-align: center; font-size: 12px; font-weight: bold; width: 140px; transition: background 0.2s;" onmouseover="this.style.backgroundColor='#155724'" onmouseout="this.style.backgroundColor='#1e7e34'">SUBMETER</a>
                            }
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        
        <div class="mt-3" style="padding: 15px 0; border-top: 1px solid #ddd;">
            <small class="text-muted">
                <i class="bi bi-info-circle"></i> 
                Total de tarefas: @Model.Count() | 
                Pendentes: @(Model.Count(t => !t.Concluida && t.DataFim >= DateTime.Now)) | 
                Expiradas: @(Model.Count(t => !t.Concluida && t.DataFim < DateTime.Now))
            </small>
        </div>
    }
</div>

@section Scripts {
<script>
    // Debounce function
    function debounce(func, wait) {
        let timeout;
        return function(...args) {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, args), wait);
        };
    }
    
    // Submit on search input and filter changes
    const searchInput = document.getElementById('searchTarefa');
    const ucFilter = document.getElementById('ucFilter');
    const form = document.getElementById('tarefaSearchForm');
    
    if (searchInput) {
        searchInput.addEventListener('input', debounce(function() {
            form.submit();
        }, 400));
    }
    
    if (ucFilter) {
        ucFilter.addEventListener('change', function() {
            form.submit();
        });
    }
    
    // Auto-dismiss success alerts after 5 seconds
    setTimeout(function() {
        var alerts = document.querySelectorAll('.alert-success');
        alerts.forEach(function(alert) {
            var bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);
</script>
} 